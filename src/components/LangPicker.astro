---
import { languages } from '../i18n/ui';
import { getLangFromUrl, replaceLangInUrl } from '../i18n/utils';
import "/node_modules/flag-icons/css/flag-icons.min.css";

const lang = getLangFromUrl(Astro.url);
const flagMap = {
    en: 'gb',
    sk: 'sk',
    ua: 'ua',
};
const currentUrl = Astro.url;
const flagClass = flagMap[lang] || lang;
---

<div>
    <button type="button"
            class="inline-flex justify-center w-full rounded-md shadow-sm px-1 py-1 bg-gray-900 hover:bg-gray-700 text-sm font-medium"
            id="menu-button" aria-expanded="true" aria-haspopup="true">
        <span class="pl-4 pr-3 py-2 flex flex-row">
            <span class={`fi fi-${flagClass}`}></span>
        </span>
        <svg class="stroke-amber-50 self-center mr-2 w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24"
             xmlns="http://www.w3.org/2000/svg">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"></path>
        </svg>
    </button>
</div>

<div class="hidden origin-top-right absolute right-0 mt-2 w-fit rounded-md shadow-lg bg-white ring-1 ring-black ring-opacity-5 focus:outline-none"
     role="menu" aria-orientation="vertical" aria-labelledby="menu-button" tabindex="-1">
    <div class="py-1" role="none">
        <ul>
            {Object.keys(languages).map((lang) => {
                const flagClass = flagMap[lang as keyof typeof flagMap] || lang;

                return (
                        <a href={`${replaceLangInUrl(currentUrl, lang)}`}>
                            <div class="text-black px-4 py-2 flex flex-row hover:bg-gray-200 ">
                                <span class={`fi fi-${flagClass}`}></span>
                                <div class="ml-3" role="menuitem">
                                    {languages[lang as keyof typeof languages]}
                                </div>
                            </div>
                        </a>
                );
            })}
        </ul>
    </div>
</div>

<script>
    const button = document.getElementById('menu-button');
    const menu = document.querySelector('.origin-top-right');

    button?.addEventListener('click', () => {
        menu?.classList.toggle('hidden');
    });

    window.addEventListener('click', (e) => {
        if (!button?.contains(e.target as Node)) {
            menu?.classList.add('hidden');
        }
    });
</script>
